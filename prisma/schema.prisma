generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id            String         @id @default(uuid())
  name          String
  specialty     String
  email         String         @unique
  password      String
  age           Int
  gender        GENDER
  appointments  Appointment[]
  prescriptions Prescription[]
  Schedule      Schedule[]
}

model Patient {
  id            String         @id @default(uuid())
  name          String
  age           Int
  gender        GENDER
  email         String         @unique
  password      String
  isPremium     Boolean        @default(false)
  appointments  Appointment[]
  prescriptions Prescription[]
}

model Schedule {
  id        String          @id @default(uuid())
  doctorId  String
  startTime DateTime
  endTime   DateTime
  status    STATUS_SCHEDULE @default(DISPONIVEL)
  doctor    Doctor          @relation(fields: [doctorId], references: [id], onDelete: Cascade)
}

model Appointment {
  id          String   @id @default(uuid())
  dateTime    DateTime
  description String?
  doctorId    String
  patientId   String
  status      STATUS
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
  patient     Patient  @relation(fields: [patientId], references: [id])
}

model Prescription {
  id          String   @id @default(uuid())
  description String
  doctorId    String
  patientId   String
  validity    DateTime
  doctor      Doctor   @relation(fields: [doctorId], references: [id])
  patient     Patient  @relation(fields: [patientId], references: [id])
}

model blacklist {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  timestamp DateTime @default(now())
}

enum STATUS {
  PENDENTE
  CONFIRMADO
  CANCELADO
}

enum STATUS_SCHEDULE {
  DISPONIVEL
  OCUPADO
  CANCELADO
  EXPIRADO
}

enum GENDER {
  MASCULINO
  FEMININO
  OUTRO
}
